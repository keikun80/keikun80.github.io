<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Developer in the ROOT</title>
    <link>/</link>
    <description>Recent content on Developer in the ROOT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS가 처음이라.</title>
      <link>/post/study/awspath/</link>
      <pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/study/awspath/</guid>
      <description>AWS 학습과정 AWS 서비스 중 사용 빈도가 높은 서비스 소개 AWS cloudfront 소개 : https://www.aws.training/Details/Video?id=24967 10분
AWS 컨테이너 : https://www.aws.training/Details/eLearning?id=67719 15분
AWS ECR 소개: https://www.aws.training/Details/Video?id=67715 10분
AWS Fargate 소개 : https://www.aws.training/Details/Video?id=65781 10분
AWS IAM 소개 : https://www.aws.training/Details/Video?id=65265 10분
AWS Codecommit 소개 : https://www.aws.training/Details/Video?id=65774 15분
AWS Codepipeline 소개 : https://www.aws.training/Details/Video?id=65777 10분
AWS CloudFormation 소개 : https://www.aws.training/Details/Video?id=65775 10분
AWS Config 소개 : https://www.aws.training/Details/Video?id=65776 10분
AWS DynamoDB 소개 : https://www.aws.training/Details/Video?id=63940 5분
AWS Elasticache primer : https://www.</description>
    </item>
    
    <item>
      <title>AWS ELB 모니터링</title>
      <link>/post/study/elb-monitoring/</link>
      <pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/study/elb-monitoring/</guid>
      <description>01. 모니터링 우리는 무엇을 봐야 하는가.
목적
우리는 무엇을 &amp;ldquo;위해서&amp;rdquo; 모니터링을 하는지 고려를 해봐야 합니다.
목적이 없다면 단지, CPU ,RAM, Network IO , DISK IO 등의 기계적인 수치를 보는 것을 모니터링이라고 믿을 수 있습니다.
모니터링의 목적을 대부분의 사람에게 물어본다면 , 장애예방, 장애탐지, 다운타임 최소화, 의사결정, 자동화 등 이 목적이라고 할 것입니다.
모니터링의 목적에 따라 모니터링을 하는 대상과 방법이 달라져야 합니다.
대상
모니터링의 목적에 따라서 하드웨어와 소프트웨어를 분리해서 모니터링 해야합니다.
장애 탐지를 위해서는 장애 상황을 가정해서 어떤 지표를 봐야할지 고려를 해야 합니다.</description>
    </item>
    
    <item>
      <title>생계형 개발자 과정</title>
      <link>/post/study/studypath/</link>
      <pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/study/studypath/</guid>
      <description>생계형 개발자 커리큘럼 생계형 개발자를 하기로 했다면
생계형 개발자, SI에서 살아남기 개정판 먼저 읽어보시고, 할만하다 하면 시작하면 됩니다.
먼저 개발자에도 등급이 있고, 그 등급에 따라 갈 수 있는 회사가 갈리고 등급의 기준이 컴퓨터적인 사고방식을
학습을 한 상태인지, 알고리즘을 이용한 문제해결 능력에 따라서 등급과 분야가 나뉜다는걸 이야기 하고 싶습니다.
먼저 이글이 맞는 분들은
 개발은 쉬운가 어려운가? 궁금하신 분 내가 개발을 할 수 있을까? 라는 의문을 가진 분 개발자를 할 수 있을까?</description>
    </item>
    
  </channel>
</rss>
